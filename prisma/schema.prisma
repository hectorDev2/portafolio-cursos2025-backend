// ========== DATASOURCE Y GENERADOR ==========
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ========== ENUMS ==========
enum Role {
  ADMINISTRADOR
  DOCENTE
  EVALUADOR
}

// ========== MODELOS PRINCIPALES ==========

model User {
  id                String   @id @default(uuid())
  email             String   @unique
  phoneNumber       String? @default("")
  address           String?
  dateOfBirth       DateTime?
  biography         String?
  password          String
  name              String?
  lastName          String?
  role              Role     @default(DOCENTE)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  Portfolio        Portfolio[]
  feedbacks         Feedback[]
}

model Portfolio {
  id          String   @id @default(uuid())
  title       String
  description String?
  semester    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  teacherId   String
  teacher     User     @relation(fields: [teacherId], references: [id])

  cursos      Curso[]

  Caratula              Caratula[]
  CargaLectiva          CargaLectiva[]
  Filosofía             Filosofía[]
  Curriculum            Curriculum[]
  feedbacks             Feedback[]
}

model Curso {
  id          String   @id @default(uuid())
  name        String
  code        String?

  portfolioId String  @unique
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])

  silabo                 silabo[]
  avances                AvanceCurso[]
  registrosEntregaSilabo RegistroEntregaSílabo[]
}

// ========== MODELOS DE DOCUMENTOS DEL PORTFOLIO ==========

model Caratula {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  portfolioId  String
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
}

model CargaLectiva {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  portfolioId  String
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
}

model Filosofía {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  portfolioId  String
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
}

model Curriculum {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  portfolioId  String
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
}

// ========== MODELOS RELACIONADOS AL CURSO ==========

model silabo {
  id           String   @id @default(uuid())
  version      String?
  fileUrl      String
  uploadedAt   DateTime @default(now())

  cursoId      String
  curso        Curso @relation(fields: [cursoId], references: [id])
}

model AvanceCurso {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  cursoId      String
  curso        Curso @relation(fields: [cursoId], references: [id])
}

model RegistroEntregaSílabo {
  id           String   @id @default(uuid())
  fileUrl      String
  uploadedAt   DateTime @default(now())

  cursoId      String
  curso        Curso @relation(fields: [cursoId], references: [id])
}

// ========== MODELO DE FEEDBACK ==========

model Feedback {
  id           String   @id @default(uuid())
  comment      String
  createdAt    DateTime @default(now())

  evaluatorId  String
  evaluator    User     @relation(fields: [evaluatorId], references: [id])

  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
}
